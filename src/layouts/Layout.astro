---
interface Props {
	title: string;
	description: string;
}

import "../styles/global.css"; // Importa el CSS desde src/styles

import { getLangFromUrl } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const { title, description } = Astro.props;
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link
			rel="icon"
			type="image/svg+xml"
			href="/img/my.svg"
		/>
		<meta name="generator" content={Astro.generator} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta
			property="og:image"
			content="/img/my.svg"
		/>
		<meta property="og:url" content="https://hub.justcoddev.com/" />
		<meta name="twitter:card" content={description} />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta
			name="twitter:image"
			content="/img/my.svg"
		/>

		<title>{title}</title>
	</head>
	<body
		class="bg-hub-background dark:bg-hub-background-dark md:flex md:justify-center"
	>
		<slot />
	</body>
</html>

<script>
	const themeToggle = document.getElementById("toggle-theme");
	const htmlElement = document.documentElement;
	const storageKey = "theme";

	function applyTheme(theme: string) {
		if (theme === "dark") {
			htmlElement.classList.add("dark");
			localStorage.setItem(storageKey, "dark");
		} else {
			htmlElement.classList.remove("dark");
			localStorage.setItem(storageKey, "light");
		}
	}

	const savedTheme = localStorage.getItem(storageKey);
	if (savedTheme) {
		applyTheme(savedTheme);
	} else {
		const preferredTheme = window.matchMedia("(prefers-color-scheme: dark)")
			.matches
			? "dark"
			: "light";
		applyTheme(preferredTheme);
	}

	window
		.matchMedia("(prefers-color-scheme: dark)")
		.addEventListener("change", (event) => {
			applyTheme(event.matches ? "dark" : "light");
		});

	if (themeToggle) {
		themeToggle.addEventListener("click", () => {
			const newTheme = htmlElement.classList.contains("dark")
				? "light"
				: "dark";
			applyTheme(newTheme);
		});
	}
</script>
