---
import { getRelativeLocaleUrl } from "astro:i18n";
import { languages } from "../../i18n/ui";
import { useTranslations } from "../../i18n/utils";
import CircleButton from "../common/CircleButton.astro";

// const lang = getLangFromUrl(Astro.url);
// const translatePath = useTranslatedPath(lang);

const getPathWithoutLocale = (path: string): string => {
  const segments = path.split("/").filter(Boolean);
  return segments.slice(1).join("/") || "/";
};

const currentPathWithoutLocale = getPathWithoutLocale(Astro.url.pathname);
const currentLang = Astro.currentLocale || "en";
const translateLabels = useTranslations(currentLang as keyof typeof languages);
---

<div class="relative group">
  <CircleButton aria-label="Cambiar idioma">
    <span class="uppercase">{currentLang}</span>
  </CircleButton>

  <div
    class="absolute right-0 w-24 top-full mt-2 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200"
  >
    <!-- <div
    class="absolute right-0 w-32 bg-white dark:bg-gray-900 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200"
  > -->
    <ul class="text-right">
      {
        Object.entries(languages).map(
          ([langCode, langName]) =>
            currentLang !== langCode && (
              <li>
                <a
                  href={getRelativeLocaleUrl(
                    langCode as any,
                    currentPathWithoutLocale,
                  )}
                  class="text-center px-4
      py-2
      text-sm
      w-auto
      rounded-full
      hover:text-hub-title
      bg-hub-background
      drop-shadow-md
      text-hub-inactive
      font-bold
      dark:text-hub-inactive
      dark:bg-hub-background-dark
      border-[1px]
      dark:border-hub-border-dark
      hover:dark:bg-hub-background-nav-dark dark:hover:text-white"
                >
                  {langName}
                </a>
              </li>
            ),
        )
      }
    </ul>
  </div>
</div>

<!-- <ul>
  {
    Object.entries(languages).map(([lang, label]) => (
      <li>
        <a href={translatePath("/", lang)}>{label}</a>
      </li>
    ))
  }
</ul> -->
